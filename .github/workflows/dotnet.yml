# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: TAF

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Restore dependencies Core
      run: dotnet restore Core/Core.csproj
    - name: Restore dependencies Tests
      run: dotnet restore Tests/Tests.csproj
    - name: Build Core
      run: dotnet build --no-restore Core/Core.csproj
    - name: Build Tests
      run: dotnet build --no-restore Tests/Tests.csproj
    - name: Install Playwright Browsers
      run: pwsh Tests/bin/Debug/net8.0/playwright.ps1 install --with-deps
    
    - name: Test
      run: dotnet test
    
    - name: Upload Allure Results
      uses: actions/upload-artifact@v4.0.0
      with:
        name: allure-results
        path: Tests/bin/Debug/net8.0/allure-results
        if-no-files-found: error
        retention-days: 20

    # - name: Clean up gh-pages branch (optional)
    #   run: |
    #       git checkout -f gh-pages
    #       git rm -rf .

    - name: Download Build Artifact
      uses: actions/download-artifact@v4.1.0
      with:
          name: allure-results
          path: ./allure-results
    
    - name: Get Allure history
      uses: actions/checkout@v4
      if: always()
      continue-on-error: true
      with:
        ref: gh-pages
        path: gh-pages

    - name: Generate report
      uses: simple-elf/allure-report-action@master
      if: always() # Execute even if previous steps fail
      with:
        gh_pages: gh-pages
        allure_results: allure-results
        allure_history: allure-history
        keep_reports: 5

    - name: Deploy Allure report to GitHub Pages # Step to deploy Allure report to GitHub Pages
      if: always() # Execute even if previous steps fail
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }} # Provide the GitHub token for authentication
        publish_branch: gh-pages # Specify the branch to publish the report to
        publish_dir: allure-history # Specify the directory containing the report
